{"ast":null,"code":"var _jsxFileName = \"/Users/patrickgoldstein/Documents/550/Final Project/HW2/client/src/pages/HomePage.js\";\nimport React from 'react';\nimport { Table, Card, Pagination, Select } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { getCorrectnessRateSubject, getCorrectnessByUser, getWeaknessStrength, getCorrectnessRateQuestion } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\n/*\nconst playerColumns = [\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n    key: 'Name',\n    sorter: (a, b) => a.Name.localeCompare(b.Name),\n    render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\n  },\n  {\n    title: 'Nationality',\n    dataIndex: 'Nationality',\n    key: 'Nationality',\n    sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n  },\n  {\n    title: 'Rating',\n    dataIndex: 'Rating',\n    key: 'Rating',\n    sorter: (a, b) => a.Rating - b.Rating\n\n  },\n  {\n    title: 'Potential',\n    dataIndex: 'Potential',\n    key: 'Potential',\n    sorter: (a, b) => a.Potential - b.Potential\n\n  },\n  {\n    title: 'Club',\n    dataIndex: 'Club',\n    key: 'Club',\n    sorter: (a, b) => a.Club.localeCompare(b.Club)\n\n  },\n  {\n    title: 'Value',\n    dataIndex: 'Value',\n    key: 'Value',\n\n  }\n  \n\n];\n*/\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //matchesResults: [],\n      //matchesPageNumber: 1,\n      //matchesPageSize: 10,\n      //playersResults: [],\n      weaknessStrength: [],\n      correctnessBySubject: [],\n      pagination: null,\n      userID: 1\n    }; //this.leagueOnChange = this.leagueOnChange.bind(this)\n    //this.goToMatch = this.goToMatch.bind(this)\n  }\n  /*\n    goToMatch(matchId) {\n      window.location = `/matches?id=${matchId}`\n    }\n    */\n\n  /*\n   leagueOnChange(value) {\n    getAllMatches(null, null, value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n     // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n   }\n  */\n\n\n  componentDidMount() {\n    getWeaknessStrength().then(res => {\n      //console.log(res.results)\n      this.setState({\n        weaknessStrength: res.results\n      }); // TASK 1: set the correct state attribute to res.results\n    });\n    getCorrectnessRateSubject().then(res => {\n      this.setState({\n        correctnessBySubject: res.results\n      });\n    });\n  }\n\n  render() {\n    const userID = this.userID;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"UserId\",\n          children: $userID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/patrickgoldstein/Documents/550/Final Project/HW2/client/src/pages/HomePage.js"],"names":["React","Table","Card","Pagination","Select","MenuBar","getCorrectnessRateSubject","getCorrectnessByUser","getWeaknessStrength","getCorrectnessRateQuestion","Column","ColumnGroup","Option","HomePage","Component","constructor","props","state","weaknessStrength","correctnessBySubject","pagination","userID","componentDidMount","then","res","setState","results","render","width","margin","marginTop","$userID"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,MAJF,QAKO,MALP;AAOA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,yBAAT,EAAoCC,oBAApC,EAA0DC,mBAA1D,EAA+EC,0BAA/E,QAAiH,YAAjH;;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BV,KAAhC;AACA,MAAM;AAAEW,EAAAA;AAAF,IAAaR,MAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMS,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACX;AACA;AACA;AACA;AACAC,MAAAA,gBAAgB,EAAG,EALR;AAMXC,MAAAA,oBAAoB,EAAG,EANZ;AAOXC,MAAAA,UAAU,EAAE,IAPD;AAQXC,MAAAA,MAAM,EAAE;AARG,KAAb,CAHiB,CAcjB;AACA;AACD;AAEH;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIEC,EAAAA,iBAAiB,GAAG;AAGlBd,IAAAA,mBAAmB,GAAGe,IAAtB,CAA2BC,GAAG,IAAI;AAChC;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,gBAAgB,EAAEM,GAAG,CAACE;AAAxB,OAAd,EAFgC,CAGhC;AACD,KAJD;AAMApB,IAAAA,yBAAyB,GAAGiB,IAA5B,CAAiCC,GAAG,IAAI;AACtC,WAAKC,QAAL,CAAc;AAAEN,QAAAA,oBAAoB,EAAEK,GAAG,CAACE;AAA5B,OAAd;AACD,KAFD;AAOD;;AAGDC,EAAAA,MAAM,GAAG;AAEP,UAAMN,MAAM,GAAG,KAAKA,MAApB;AAEA,wBAGE;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,QAAzB;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SAAZ;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA,+BAEA,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,QAAZ;AAAA,oBAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAoBD;;AAhFoC;;AAoFvC,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport {\n  Table,\n  Card,\n  Pagination,\n  Select\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getCorrectnessRateSubject, getCorrectnessByUser, getWeaknessStrength, getCorrectnessRateQuestion } from '../fetcher'\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n/*\nconst playerColumns = [\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n    key: 'Name',\n    sorter: (a, b) => a.Name.localeCompare(b.Name),\n    render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\n  },\n  {\n    title: 'Nationality',\n    dataIndex: 'Nationality',\n    key: 'Nationality',\n    sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n  },\n  {\n    title: 'Rating',\n    dataIndex: 'Rating',\n    key: 'Rating',\n    sorter: (a, b) => a.Rating - b.Rating\n\n  },\n  {\n    title: 'Potential',\n    dataIndex: 'Potential',\n    key: 'Potential',\n    sorter: (a, b) => a.Potential - b.Potential\n\n  },\n  {\n    title: 'Club',\n    dataIndex: 'Club',\n    key: 'Club',\n    sorter: (a, b) => a.Club.localeCompare(b.Club)\n\n  },\n  {\n    title: 'Value',\n    dataIndex: 'Value',\n    key: 'Value',\n\n  }\n  \n\n];\n*/\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      //matchesResults: [],\n      //matchesPageNumber: 1,\n      //matchesPageSize: 10,\n      //playersResults: [],\n      weaknessStrength : [],\n      correctnessBySubject : [],\n      pagination: null,\n      userID: 1,\n    }\n\n    //this.leagueOnChange = this.leagueOnChange.bind(this)\n    //this.goToMatch = this.goToMatch.bind(this)\n  }\n\n/*\n  goToMatch(matchId) {\n    window.location = `/matches?id=${matchId}`\n  }\n  */\n  /*\n\n  leagueOnChange(value) {\n    getAllMatches(null, null, value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n\n  }\n*/\n  componentDidMount() {\n  \n\n    getWeaknessStrength().then(res => {\n      //console.log(res.results)\n      this.setState({ weaknessStrength: res.results })\n      // TASK 1: set the correct state attribute to res.results\n    })\n\n    getCorrectnessRateSubject().then(res => {\n      this.setState({ correctnessBySubject: res.results })\n    })\n\n  \n\n\n  }\n\n\n  render() {\n\n    const userID = this.userID;\n\n    return (\n\n      \n      <div>\n        <MenuBar />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Players</h3>\n        </div>\n\n        <div>\n\n        <Card title=\"UserId\">{$userID}</Card>\n\n        </div>\n     \n\n      </div>\n\n      \n    )\n  }\n\n}\n\nexport default HomePage\n\n"]},"metadata":{},"sourceType":"module"}