{"ast":null,"code":"var _jsxFileName = \"/Users/patrickgoldstein/Documents/550/Final Project/HW2/client/src/pages/HomePage.js\";\nimport React, { useState } from 'react';\nimport { Table, Card, Pagination, Select } from 'antd';\nimport '../assets/scss/card.scss';\nimport MenuBar from '../components/MenuBar';\nimport DisplayCards from '../components/DisplayCards';\nimport Login from '../components/Login';\nimport { getCorrectnessRateSubject, getCorrectnessByUser, getWeaknessStrength, getCorrectnessRateQuestion } from '../fetcher';\nimport LoginForm from '../components/LoginForm';\nimport Button from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\nconst dummyStrength = 'Math';\nconst dummyWeakness = 'Science';\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props); //In JS, functions are objects. They have methods, such as bind.\n    //Bind method returns new instance of addLoginHandler function.\n    //In the function, this references current instance.\n    //this.addLoginHandler is set to new instance of method returned by bind method \n\n    this.state = {\n      //matchesResults: [],\n      //matchesPageNumber: 1,\n      //matchesPageSize: 10,\n      //playersResults: [],\n      weaknessStrength: [],\n      correctnessBySubject: [],\n      pagination: null,\n      userID: 0,\n      authentication: false\n    };\n    this.addLoginHandler = this.addLoginHandler.bind(this);\n  }\n\n  goToTest(userID) {\n    window.location = `/test?id=${userID}`;\n  }\n  /*\n   leagueOnChange(value) {\n    getAllMatches(null, null, value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n     // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n   }\n  */\n\n\n  componentDidMount() {\n    getWeaknessStrength().then(res => {\n      //console.log(res.results)\n      this.setState({\n        weaknessStrength: res.results\n      }); // TASK 1: set the correct state attribute to res.results\n    });\n    getCorrectnessRateSubject().then(res => {\n      this.setState({\n        correctnessBySubject: res.results\n      });\n    });\n    /*\n    getUserID().then(res => {\n      this.setState({userID: res.results})\n    })\n    \n    */\n  }\n\n  addLoginHandler(loginData) {\n    //allows us to send http requests\n    //first argument is url\n    //fetch();\n    //this.props.state.userID = loginData.userID;\n    //  this.updateState({userID: loginData.userId});\n    //method that brings dom and virtual dom in sync \n    this.setState({\n      userID: loginData.userID\n    });\n  }\n\n  render() {\n    //this.state.userID;\n    // <Button type = 'test'></Button>\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DisplayCards, {\n            title: \"User ID\",\n            textBody: this.state.userID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 16\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DisplayCards, {\n            title: dummyWeakness,\n            textBody: \"Strongest Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 16\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DisplayCards, {\n            title: dummyStrength,\n            textBody: \"Weakest Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 16\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Login, {\n          authentication: this.state.authentication\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: this.addLoginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToTest(this.state.userID),\n          children: \"Click here to test!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/patrickgoldstein/Documents/550/Final Project/HW2/client/src/pages/HomePage.js"],"names":["React","useState","Table","Card","Pagination","Select","MenuBar","DisplayCards","Login","getCorrectnessRateSubject","getCorrectnessByUser","getWeaknessStrength","getCorrectnessRateQuestion","LoginForm","Button","Column","ColumnGroup","Option","dummyStrength","dummyWeakness","HomePage","Component","constructor","props","state","weaknessStrength","correctnessBySubject","pagination","userID","authentication","addLoginHandler","bind","goToTest","window","location","componentDidMount","then","res","setState","results","loginData","render","width","margin","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Table,\n  Card,\n  Pagination,\n  Select\n} from 'antd'\n\n\nimport '../assets/scss/card.scss'\n\nimport MenuBar from '../components/MenuBar';\nimport DisplayCards from '../components/DisplayCards';\nimport Login from '../components/Login'\nimport { getCorrectnessRateSubject, getCorrectnessByUser, getWeaknessStrength, getCorrectnessRateQuestion } from '../fetcher'\nimport LoginForm from '../components/LoginForm';\nimport Button from '../components/Button'\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\nconst dummyStrength = 'Math';\nconst dummyWeakness = 'Science';\n\n\nclass HomePage extends React.Component {\n\n  state = {\n    //matchesResults: [],\n    //matchesPageNumber: 1,\n    //matchesPageSize: 10,\n    //playersResults: [],\n    weaknessStrength: [],\n    correctnessBySubject: [],\n    pagination: null,\n    userID: 0,\n    authentication: false,\n  }\n  constructor(props) {\n    super(props)\n//In JS, functions are objects. They have methods, such as bind.\n//Bind method returns new instance of addLoginHandler function.\n//In the function, this references current instance.\n\n//this.addLoginHandler is set to new instance of method returned by bind method \n\n   this.addLoginHandler= this.addLoginHandler.bind(this);\n\n  }\n\n  \n    goToTest(userID) {\n      window.location = `/test?id=${userID}`\n    }\n    \n  /*\n\n  leagueOnChange(value) {\n    getAllMatches(null, null, value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n\n  }\n*/\n  componentDidMount() {\n\n\n    getWeaknessStrength().then(res => {\n      //console.log(res.results)\n      this.setState({ weaknessStrength: res.results })\n      // TASK 1: set the correct state attribute to res.results\n    })\n\n    getCorrectnessRateSubject().then(res => {\n      this.setState({ correctnessBySubject: res.results })\n    })\n\n    /*\n    getUserID().then(res => {\n      this.setState({userID: res.results})\n    })\n\n\n  \n*/\n  }\n  addLoginHandler(loginData) {\n    //allows us to send http requests\n    //first argument is url\n    //fetch();\n    //this.props.state.userID = loginData.userID;\n  //  this.updateState({userID: loginData.userId});\n\n\n   //method that brings dom and virtual dom in sync \n   this.setState({userID: loginData.userID });\n}\n\n  render() {\n\n    //this.state.userID;\n   // <Button type = 'test'></Button>\n\n   \n    return (\n\n\n      <div>\n        <MenuBar />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n        </div>\n\n        <div>\n        </div>\n\n\n        <div className=\"wrapper\">\n          <div><DisplayCards title=\"User ID\" textBody={this.state.userID} /> </div>\n\n          <div><DisplayCards title={dummyWeakness} textBody=\"Strongest Subject\" /> </div>\n\n\n          <div><DisplayCards title={dummyStrength} textBody=\"Weakest Subject\" /> </div>\n\n          <Login authentication = {this.state.authentication}/>\n\n          <LoginForm onLogin = {this.addLoginHandler}/>\n\n\n          <button onClick= {goToTest(this.state.userID)}>Click here to test!</button>\n\n\n\n        </div>\n\n\n\n      </div>\n\n\n    )\n  }\n\n}\n\nexport default HomePage\n\n"]},"metadata":{},"sourceType":"module"}